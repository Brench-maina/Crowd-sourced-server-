name: Crowd Sourced Learning - Backend CI/CD

on:
  push:
    branches:
      - main        # only deploy when you push to main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      #  Notify Slack - Pipeline Started
      - name: Notify Slack - Pipeline Started
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H "Content-Type: application/json" --data '{
              "text": "üöÄ Deployment started for *Crowd Sourced Learning Backend*!",
              "channel": "#devops",
              "username": "Engineer-Bot",
              "icon_emoji": ":rocket:"
          }' $SLACK_WEBHOOK_URL

      #  Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      #  Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.6'

      #  Install dependencies
      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Trigger Render Deployment
      - name: Deploy to Render
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}

      # # Notify Slack - Success
      # - name: Notify Slack - Success
      #   if: success()
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #   run: |
      #     curl -X POST -H "Content-Type: application/json" --data '{
      #         "text": "‚úÖ *Crowd Sourced Learning Backend* deployed successfully!",
      #         "channel": "#devops",
      #         "username": "Engineer-Bot",
      #         "icon_emoji": ":white_check_mark:"
      #     }' $SLACK_WEBHOOK_URL

      # #  Notify Slack - Failure
      # - name: Notify Slack - Failure
      #   if: failure()
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #   run: |
      #     curl -X POST -H "Content-Type: application/json" --data '{
      #         "text": "‚ùå Deployment failed for *Crowd Sourced Learning Backend*. Please check the logs.",
      #         "channel": "#devops",
      #         "username": "Engineer-Bot",
      #         "icon_emoji": ":x:"
      #     }' $SLACK_WEBHOOK_URL
